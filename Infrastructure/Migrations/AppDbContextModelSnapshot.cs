// <auto-generated />
using System;
using Klevify.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Klevify.Data.Models.BookLanguage", b =>
                {
                    b.Property<int>("BookID")
                        .HasColumnType("int");

                    b.Property<int>("LanguageID")
                        .HasColumnType("int");

                    b.Property<byte[]>("BookContent")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsReviewedByAdmin")
                        .HasColumnType("bit");

                    b.HasKey("BookID", "LanguageID");

                    b.HasIndex("LanguageID");

                    b.ToTable("BookLanguages");
                });

            modelBuilder.Entity("Klevify_Domain.Domain.Models.AuthorBook", b =>
                {
                    b.Property<int>("BookID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<bool>("IsMainAuthor")
                        .HasColumnType("bit");

                    b.HasKey("BookID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("AuthorBooks");
                });

            modelBuilder.Entity("Klevify_Domain.Domain.Models.Book", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DatePublished")
                        .HasColumnType("datetime2");

                    b.Property<int>("EstimatedReadTimeInMinutes")
                        .HasColumnType("int");

                    b.Property<int>("FKGenreID")
                        .HasColumnType("int");

                    b.Property<int>("GenreID")
                        .HasColumnType("int");

                    b.Property<int>("TotalPages")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("GenreID");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Klevify_Domain.Domain.Models.Favorite", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BookLanguageBookID")
                        .HasColumnType("int");

                    b.Property<int>("BookLanguageLanguageID")
                        .HasColumnType("int");

                    b.Property<int>("FKBookID")
                        .HasColumnType("int");

                    b.Property<int>("FKLanguageID")
                        .HasColumnType("int");

                    b.Property<int>("FKUserID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FavoritedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LanguageID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LanguageID");

                    b.HasIndex("UserID");

                    b.HasIndex("BookLanguageBookID", "BookLanguageLanguageID");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("Klevify_Domain.Domain.Models.Genre", b =>
                {
                    b.Property<int>("GenreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreID"));

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GenreID");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Klevify_Domain.Domain.Models.History", b =>
                {
                    b.Property<int>("HistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryID"));

                    b.Property<int>("BookLanguageBookID")
                        .HasColumnType("int");

                    b.Property<int>("BookLanguageLanguageID")
                        .HasColumnType("int");

                    b.Property<int>("FKBookID")
                        .HasColumnType("int");

                    b.Property<int>("FKLanguageID")
                        .HasColumnType("int");

                    b.Property<int>("FKUserID")
                        .HasColumnType("int");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<int?>("LanguageID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastReadDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastReadPosition")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("HistoryID");

                    b.HasIndex("LanguageID");

                    b.HasIndex("UserID");

                    b.HasIndex("BookLanguageBookID", "BookLanguageLanguageID");

                    b.ToTable("History");
                });

            modelBuilder.Entity("Klevify_Domain.Domain.Models.Language", b =>
                {
                    b.Property<int>("LanguageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanguageID"));

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LanguageID");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("Klevify_Domain.Domain.Models.MembershipType", b =>
                {
                    b.Property<int>("MembershipTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MembershipTypeID"));

                    b.Property<int>("DurationInDays")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MembershipTypeID");

                    b.ToTable("MembershipTypes");
                });

            modelBuilder.Entity("Klevify_Domain.Domain.Models.Rating", b =>
                {
                    b.Property<int>("RatingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingID"));

                    b.Property<int>("BookID")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FKBookID")
                        .HasColumnType("int");

                    b.Property<int>("FKLanguageID")
                        .HasColumnType("int");

                    b.Property<int>("FKUserID")
                        .HasColumnType("int");

                    b.Property<int>("LanguageID")
                        .HasColumnType("int");

                    b.Property<DateTime>("RatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("RatingID");

                    b.HasIndex("BookID");

                    b.HasIndex("LanguageID");

                    b.HasIndex("UserID");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("Klevify_Domain.Domain.Models.ReadingGoal", b =>
                {
                    b.Property<int>("GoalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GoalID"));

                    b.Property<int>("CurrentBooks")
                        .HasColumnType("int");

                    b.Property<int>("CurrentPages")
                        .HasColumnType("int");

                    b.Property<int>("FKUserID")
                        .HasColumnType("int");

                    b.Property<int>("TargetBooks")
                        .HasColumnType("int");

                    b.Property<int>("TargetPages")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("GoalID");

                    b.HasIndex("UserID");

                    b.ToTable("ReadingGoals");
                });

            modelBuilder.Entity("Klevify_Domain.Domain.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Klevify_Domain.Domain.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FK_Role")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Klevify_Domain.Domain.Models.UserMembership", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("EndOfBillingPeriod")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastPaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MembershipTypeID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MembershipTypeID");

                    b.HasIndex("UserID");

                    b.ToTable("UserMemberships");
                });

            modelBuilder.Entity("Klevify.Data.Models.BookLanguage", b =>
                {
                    b.HasOne("Klevify_Domain.Domain.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Klevify_Domain.Domain.Models.Language", "Language")
                        .WithMany("BookLanguages")
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Klevify_Domain.Domain.Models.AuthorBook", b =>
                {
                    b.HasOne("Klevify_Domain.Domain.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Klevify_Domain.Domain.Models.User", "User")
                        .WithMany("AuthorBooks")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Klevify_Domain.Domain.Models.Book", b =>
                {
                    b.HasOne("Klevify_Domain.Domain.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Klevify_Domain.Domain.Models.Favorite", b =>
                {
                    b.HasOne("Klevify_Domain.Domain.Models.Language", null)
                        .WithMany("Favorites")
                        .HasForeignKey("LanguageID");

                    b.HasOne("Klevify_Domain.Domain.Models.User", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Klevify.Data.Models.BookLanguage", "BookLanguage")
                        .WithMany()
                        .HasForeignKey("BookLanguageBookID", "BookLanguageLanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookLanguage");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Klevify_Domain.Domain.Models.History", b =>
                {
                    b.HasOne("Klevify_Domain.Domain.Models.Language", null)
                        .WithMany("Histories")
                        .HasForeignKey("LanguageID");

                    b.HasOne("Klevify_Domain.Domain.Models.User", "User")
                        .WithMany("Histories")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Klevify.Data.Models.BookLanguage", "BookLanguage")
                        .WithMany()
                        .HasForeignKey("BookLanguageBookID", "BookLanguageLanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookLanguage");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Klevify_Domain.Domain.Models.Rating", b =>
                {
                    b.HasOne("Klevify_Domain.Domain.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Klevify_Domain.Domain.Models.Language", "Language")
                        .WithMany("Ratings")
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Klevify_Domain.Domain.Models.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Language");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Klevify_Domain.Domain.Models.ReadingGoal", b =>
                {
                    b.HasOne("Klevify_Domain.Domain.Models.User", "User")
                        .WithMany("ReadingGoals")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Klevify_Domain.Domain.Models.User", b =>
                {
                    b.HasOne("Klevify_Domain.Domain.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Klevify_Domain.Domain.Models.UserMembership", b =>
                {
                    b.HasOne("Klevify_Domain.Domain.Models.MembershipType", "MembershipType")
                        .WithMany("UserMemberships")
                        .HasForeignKey("MembershipTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Klevify_Domain.Domain.Models.User", "User")
                        .WithMany("UserMemberships")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MembershipType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Klevify_Domain.Domain.Models.Language", b =>
                {
                    b.Navigation("BookLanguages");

                    b.Navigation("Favorites");

                    b.Navigation("Histories");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("Klevify_Domain.Domain.Models.MembershipType", b =>
                {
                    b.Navigation("UserMemberships");
                });

            modelBuilder.Entity("Klevify_Domain.Domain.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Klevify_Domain.Domain.Models.User", b =>
                {
                    b.Navigation("AuthorBooks");

                    b.Navigation("Favorites");

                    b.Navigation("Histories");

                    b.Navigation("Ratings");

                    b.Navigation("ReadingGoals");

                    b.Navigation("UserMemberships");
                });
#pragma warning restore 612, 618
        }
    }
}
